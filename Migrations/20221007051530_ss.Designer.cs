// <auto-generated />
using MOAssignment1.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MOAssignment1.Migrations
{
    [DbContext(typeof(StudentDbContext))]
    [Migration("20221007051530_ss")]
    partial class ss
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MOAssignment1.Entities.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("GPA")
                        .HasColumnType("float");

                    b.Property<string>("GPAScale")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentProgramId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("dataOfBirth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.HasIndex("StudentProgramId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            FirstName = "Maria",
                            GPA = 2.5,
                            GPAScale = "good",
                            LastName = "Oliveira",
                            StudentProgramId = "CP",
                            dataOfBirth = "17/08/1997"
                        },
                        new
                        {
                            StudentId = 2,
                            FirstName = "Jose",
                            GPA = 4.5,
                            GPAScale = "good",
                            LastName = "Oliveira",
                            StudentProgramId = "NU",
                            dataOfBirth = "17/08/1997"
                        },
                        new
                        {
                            StudentId = 3,
                            FirstName = "Carlos",
                            GPA = 3.5,
                            GPAScale = "good",
                            LastName = "Oliveira",
                            StudentProgramId = "PB",
                            dataOfBirth = "17/08/1997"
                        });
                });

            modelBuilder.Entity("MOAssignment1.Entities.StudentProgram", b =>
                {
                    b.Property<string>("StudentProgramId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentProgramId");

                    b.ToTable("Program");

                    b.HasData(
                        new
                        {
                            StudentProgramId = "CP",
                            Name = "ComputerPorgramming"
                        },
                        new
                        {
                            StudentProgramId = "CPI",
                            Name = "ComputerPorgramming"
                        },
                        new
                        {
                            StudentProgramId = "NU",
                            Name = "Nursing"
                        },
                        new
                        {
                            StudentProgramId = "CA",
                            Name = "Carpinter"
                        },
                        new
                        {
                            StudentProgramId = "CO",
                            Name = "Cooking"
                        },
                        new
                        {
                            StudentProgramId = "BI",
                            Name = "Busnessis"
                        },
                        new
                        {
                            StudentProgramId = "HO",
                            Name = "Hotel"
                        },
                        new
                        {
                            StudentProgramId = "PB",
                            Name = "Plumber"
                        });
                });

            modelBuilder.Entity("MOAssignment1.Entities.Student", b =>
                {
                    b.HasOne("MOAssignment1.Entities.StudentProgram", "Program")
                        .WithMany()
                        .HasForeignKey("StudentProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Program");
                });
#pragma warning restore 612, 618
        }
    }
}
